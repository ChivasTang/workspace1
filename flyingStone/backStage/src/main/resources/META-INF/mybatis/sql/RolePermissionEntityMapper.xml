<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyingStone.security.dao.RolePermissionEntityMapper">
  <resultMap id="BaseResultMap" type="com.flyingStone.security.domain.entity.RolePermissionEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="permission_id" jdbcType="BIGINT" property="permissionId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="locked" jdbcType="BIT" property="locked" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, permission_id, create_user, created, update_user, updated, locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from r_role_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from r_role_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.flyingStone.security.domain.entity.RolePermissionEntity">
    insert into r_role_permission (id, role_id, permission_id, 
      create_user, created, update_user, 
      updated, locked)
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, 
      #{createUser,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updated,jdbcType=TIMESTAMP}, #{locked,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.flyingStone.security.domain.entity.RolePermissionEntity">
    insert into r_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flyingStone.security.domain.entity.RolePermissionEntity">
    update r_role_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flyingStone.security.domain.entity.RolePermissionEntity">
    update r_role_permission
    set role_id = #{roleId,jdbcType=BIGINT},
      permission_id = #{permissionId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP},
      locked = #{locked,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>