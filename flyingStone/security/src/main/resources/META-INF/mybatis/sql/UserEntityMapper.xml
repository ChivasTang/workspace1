<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyingStone.security.dao.UserEntityMapper">
  <resultMap id="BaseResultMap" type="com.flyingStone.security.domain.entity.UserEntity">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="locked" jdbcType="BIT" property="locked" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, email, password, first_name, last_name, birthday, create_user, 
    created, update_user, updated, locked
  </sql>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from m_user
    where username = #{username,jdbcType=BIGINT}
    and locked=0
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from m_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from m_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.flyingStone.security.domain.entity.UserEntity">
    insert into m_user (user_id, username, email, 
      password, first_name, last_name, 
      birthday, create_user, created, 
      update_user, updated, locked
      )
    values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{createUser,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updated,jdbcType=TIMESTAMP}, #{locked,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.flyingStone.security.domain.entity.UserEntity">
    insert into m_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flyingStone.security.domain.entity.UserEntity">
    update m_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flyingStone.security.domain.entity.UserEntity">
    update m_user
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      create_user = #{createUser,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP},
      locked = #{locked,jdbcType=BIT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>